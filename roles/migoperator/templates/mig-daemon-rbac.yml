# ---
# apiVersion: policy/v1beta1
# kind: PodSecurityPolicy
# metadata:
#   name: k8s-mig-operator-psp
#   namespace: default
#   annotations:
#     seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
# spec:
#   privileged: true
#   allowPrivilegeEscalation: true
#   allowedCapabilities:
#   - '*'
#   volumes:
#   - '*'
#   hostNetwork: true
#   hostPorts:
#   - min: 0
#     max: 65535
#   hostIPC: true
#   hostPID: true
#   runAsUser:
#     rule: 'RunAsAny'
#   seLinux:
#     rule: 'RunAsAny'
#   supplementalGroups:
#     rule: 'RunAsAny'
#   fsGroup:
#     rule: 'RunAsAny'
---
# service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-mig-operator-daemonset-sa
  namespace: default
---
# cluster role
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: k8s-mig-operator-daemonset-psp-role
# rules:
# - apiGroups: ["policy"]
#   resources: 
#     - podsecuritypolicies
#   verbs:
#     - use
#   resourceNames:
#   - psp:k8s-mig-operator-psp
---
# cluster role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-mig-operator-psp-crb
subjects:
- kind: ServiceAccount
  name: k8s-mig-operator-daemonset-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: k8s-mig-operator-daemonset-psp-role
  apiGroup: rbac.authorization.k8s.io
---
# cluster role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-mig-operator-daemonset-role
rules:
- apiGroups: ["operators.riskfuel.com"]
  resources: 
    - migoperators
  verbs:
    - get
    - list
---
# cluster role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-mig-operator-crb
subjects:
- kind: ServiceAccount
  name: k8s-mig-operator-daemonset-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: k8s-mig-operator-daemonset-role
  apiGroup: rbac.authorization.k8s.io
---
# cluster role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-mig-operator-daemonset-gen-role
rules:
- apiGroups: [""]
  resources: 
    - nodes
    - pods
  verbs:
    - get
    - list
---
# cluster role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-mig-operator-gen-crb
subjects:
- kind: ServiceAccount
  name: k8s-mig-operator-daemonset-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: k8s-mig-operator-daemonset-gen-role
  apiGroup: rbac.authorization.k8s.io
